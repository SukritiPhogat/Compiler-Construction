start program
program moduleDeclarations otherModules driverModule otherModules
moduleDeclarations moduleDeclaration moduleDeclarations
moduleDeclarations EPSILON
moduleDeclaration DECLARE MODULE ID SEMICOL
otherModules module otherModules
otherModules EPSILON
driverModule DRIVERDEF DRIVER PROGRAM DRIVERENDDEF moduleDef
module DEF MODULE ID ENDDEF TAKES INPUT SQBO input_plist SQBC SEMICOL ret moduleDef
ret RETURNS SQBO output_plist SQBC SEMICOL
ret EPSILON
input_plist ID COLON dataType new_input_plist
new_input_plist COMMA ID COLON dataType new_input_plist
new_input_plist EPSILON
output_plist ID COLON type new_output_plist
new_output_plist COMMA ID COLON type new_output_plist
new_output_plist EPSILON
dataType ARRAY SQBO range_arrays SQBC OF type
dataType INTEGER
dataType REAL
dataType BOOLEAN
range_arrays index_arr RANGEOP index_arr
type INTEGER
type REAL
type BOOLEAN
moduleDef START statements END
statements statement statements
statements EPSILON
statement ioStmt
statement simpleStmt
statement declareStmt
statement conditionalStmt
statement iterativeStmt
ioStmt GET_VALUE BO ID BC SEMICOL
ioStmt PRINT BO var_print BC SEMICOL
boolConstt TRUE
boolConstt FALSE
var_print ID new_P1
var_print NUM
var_print RNUM
var_print boolConstt
new_P1 SQBO index_arr SQBC
new_P1 EPSILON
simpleStmt assignmentStmt
simpleStmt moduleReuseStmt
assignmentStmt ID whichStmt
whichStmt lvalueIDStmt
whichStmt lvalueARRStmt
lvalueIDStmt ASSIGNOP expression SEMICOL
lvalueARRStmt SQBO eee SQBC ASSIGNOP expression SEMICOL
index_arr sign new_index
new_index NUM
new_index ID
sign PLUS
sign MINUS
sign EPSILON
moduleReuseStmt optional USE MODULE ID WITH PARAMETERS actual_para_list SEMICOL
actual_para_list sign kkk n_11
n_11 COMMA sign kkk n_11
n_11 EPSILON
kkk NUM
kkk RNUM
kkk boolConstt
kkk ID new_actual_para_list
new_actual_para_list SQBO eee SQBC
new_actual_para_list EPSILON
optional SQBO idList SQBC ASSIGNOP
optional EPSILON
idList ID new_idList
new_idList COMMA ID new_idList
new_idList EPSILON
expression arithmeticOrBooleanExpr
expression unary
unary unary_op new_NT
unary_op PLUS
unary_op MINUS
new_NT BO arithmeticExpr BC
new_NT var_id_num
var_id_num ID
var_id_num NUM
var_id_num RNUM
arithmeticOrBooleanExpr anyTerm new_Term
new_Term logicalOp anyTerm new_Term
new_Term EPSILON
anyTerm arithmeticExpr new_Term2
new_Term2 relationalOp arithmeticExpr new_Term2
new_Term2 EPSILON
arithmeticExpr term newarithmeticExpr
newarithmeticExpr op1 term newarithmeticExpr
newarithmeticExpr EPSILON
term factor term_new
term_new op2 factor term_new
term_new EPSILON
factor BO arithmeticOrBooleanExpr BC
factor NUM
factor RNUM
factor boolConstt
factor ID new_factor
new_factor SQBO eee SQBC
new_factor EPSILON
eee unary_op newExpr
eee arrExpr
newExpr BO arrExpr BC
newExpr var_id_num
arrExpr arrTerm arr_N4
arr_N4 op1 arrTerm arr_N4
arr_N4 EPSILON
arrTerm arrFactor arr_N5
arr_N5 op2 arrFactor arr_N5
arr_N5 EPSILON
arrFactor ID
arrFactor NUM
arrFactor boolConstt
arrFactor BO arrExpr BC
op1 PLUS
op1 MINUS
op2 MUL
op2 DIV
logicalOp AND
logicalOp OR
relationalOp LT
relationalOp LE
relationalOp GT
relationalOp GE
relationalOp EQ
relationalOp NE
declareStmt DECLARE idList COLON dataType SEMICOL
conditionalStmt SWITCH BO ID BC START caseStmts def END
caseStmts CASE value COLON statements BREAK SEMICOL new_caseStmt
new_caseStmt CASE value COLON statements BREAK SEMICOL new_caseStmt
new_caseStmt EPSILON
value NUM
value TRUE
value FALSE
def DEFAULT COLON statements BREAK SEMICOL
def EPSILON
iterativeStmt FOR BO ID IN range_for_loop BC START statements END
iterativeStmt WHILE BO arithmeticOrBooleanExpr BC START statements END
range_for_loop index_for_loop RANGEOP index_for_loop
index_for_loop sign new_index_for_loop
new_index_for_loop NUM